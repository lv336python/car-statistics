{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/confirm-email/confirm-email.component.css","webpack:///./src/app/confirm-email/confirm-email.component.html","webpack:///./src/app/confirm-email/confirm-email.component.ts","webpack:///./src/app/confirm-reset/confirm-reset.component.css","webpack:///./src/app/confirm-reset/confirm-reset.component.html","webpack:///./src/app/confirm-reset/confirm-reset.component.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/directives/text-format.directive.ts","webpack:///./src/app/file-uploads/file-uploads.component.css","webpack:///./src/app/file-uploads/file-uploads.component.html","webpack:///./src/app/file-uploads/file-uploads.component.ts","webpack:///./src/app/filter-item/filter-item.component.css","webpack:///./src/app/filter-item/filter-item.component.html","webpack:///./src/app/filter-item/filter-item.component.ts","webpack:///./src/app/filter/filter.component.css","webpack:///./src/app/filter/filter.component.html","webpack:///./src/app/filter/filter.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/logout/logout.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/models/user.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/notfound/notfound.component.css","webpack:///./src/app/notfound/notfound.component.html","webpack:///./src/app/notfound/notfound.component.ts","webpack:///./src/app/notification/notification.component.css","webpack:///./src/app/notification/notification.component.html","webpack:///./src/app/notification/notification.component.ts","webpack:///./src/app/registration/registration.component.css","webpack:///./src/app/registration/registration.component.html","webpack:///./src/app/registration/registration.component.ts","webpack:///./src/app/reset-password/reset-password.component.css","webpack:///./src/app/reset-password/reset-password.component.html","webpack:///./src/app/reset-password/reset-password.component.ts","webpack:///./src/app/socket.service.ts","webpack:///./src/app/statistics/statistics.component.css","webpack:///./src/app/statistics/statistics.component.html","webpack:///./src/app/statistics/statistics.component.ts","webpack:///./src/app/table/table.component.css","webpack:///./src/app/table/table.component.html","webpack:///./src/app/table/table.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {HomeComponent} from \"./home/home.component\";\nimport {NotfoundComponent} from \"./notfound/notfound.component\";\nimport {RegistrationComponent} from \"./registration/registration.component\";\nimport { AuthGuardService} from \"./auth.guard\";\nimport {ConfirmEmailComponent} from \"./confirm-email/confirm-email.component\";\nimport {LoginComponent} from \"./login/login.component\";\nimport {LogoutComponent} from \"./logout/logout.component\"\nimport {ResetPasswordComponent} from \"./reset-password/reset-password.component\"\nimport {ConfirmResetComponent} from \"./confirm-reset/confirm-reset.component\"\nimport {FilterComponent} from \"./filter/filter.component\";\nimport {FileUploadsComponent} from \"./file-uploads/file-uploads.component\";\n\nconst routes: Routes = [\n    {path: '', component: HomeComponent, canActivate: [AuthGuardService]},\n    {path: 'register', component: RegistrationComponent},\n    {path: 'confirm/:token', component: ConfirmEmailComponent},\n    {path: 'login', component: LoginComponent},\n    {path: 'logout', component: LogoutComponent},\n    {path: 'reset', component: ResetPasswordComponent},\n    {path: 'reset_password_confirm/:token', component: ConfirmResetComponent},\n\t{path: 'filter', component: FilterComponent},\n\t{path: '**', component: NotfoundComponent},\n];\n\n@NgModule({\n    exports: [RouterModule],\n    imports: [RouterModule.forRoot(routes)],\n})\nexport class AppRoutingModule {\n}\n","module.exports = \".navbar{\\nbackground-color: rgb(22, 17, 17);\\nborder-radius: 4px;\\n}\"","module.exports = \"<app-navbar></app-navbar>\\n<app-notification *ngIf=\\\"loggedIn\\\"></app-notification>\\n<router-outlet></router-outlet>\\n\\n\"","import {Component} from '@angular/core';\nimport {AuthGuardService} from \"./auth.guard\";\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent{\n    loggedIn : string;\n\n    constructor(private auth : AuthGuardService) {\n    }\n\n    ngOnInit() {\n        this.loggedIn =  this.auth.isLogined();\n    }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PlotlyModule } from 'angular-plotly.js'\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { NotfoundComponent } from './notfound/notfound.component';\nimport { HomeComponent } from './home/home.component';\nimport { ConfirmEmailComponent } from './confirm-email/confirm-email.component';\nimport { FilterComponent } from './filter/filter.component';\nimport { FilterItemComponent } from './filter-item/filter-item.component';\nimport { LoginComponent } from './login/login.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { ConfirmResetComponent } from './confirm-reset/confirm-reset.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { TableComponent } from './table/table.component';\nimport { FileUploadsComponent } from './file-uploads/file-uploads.component';\nimport {AuthGuardService} from './auth.guard';\nimport { StatisticsComponent } from './statistics/statistics.component';\nimport { NotificationComponent } from './notification/notification.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistrationComponent,\n    NotfoundComponent,\n    HomeComponent,\n    ConfirmEmailComponent,\n    LoginComponent,\n    LogoutComponent,\n    ResetPasswordComponent,\n    ConfirmResetComponent,\n    NavbarComponent,\n    FileUploadsComponent,\n    TableComponent,\n    StatisticsComponent,\n    NotificationComponent,\n    FilterComponent,\n    FilterItemComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n      ReactiveFormsModule,\n      PlotlyModule\n  ],\n  providers: [AuthGuardService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  returnUrl : string= '/login';\n  constructor( private router: Router) {}\n  isLogined(){\n    function getCookie(name) {\n        var matches = document.cookie.match(new RegExp(\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n        return matches ? decodeURIComponent(matches[1]) : undefined;\n\n    }\n    return getCookie(\"session\");\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.isLogined()) {\n      return true;\n    } else {\n      this.router.navigate([this.returnUrl], { queryParams: { authRedirecting : true } });\n      return false;\n    }\n  }\n}","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {User} from \"./models/user\";\nimport {Observable} from \"rxjs\";\nimport {tap} from \"rxjs/operators\";\nimport {assertNumber} from \"@angular/core/src/render3/assert\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n\n    login_api_url = \"api/login\";\n    register_api_url = \"api/register\";\n    confirm_url = \"api/confirm/\";\n    logout_api_url = \"api/logout\";\n    reset_password_url = \"api/reset\";\n    reset_password_confirm_api = \"api/password_reset\";\n\n    constructor(\n        private _http: HttpClient,\n    ) {\n    }\n\n    toRegister(user: User): Observable<any> {\n        return this._http.post<any>(this.register_api_url, user)\n            .pipe(\n                tap(\n                    data => console.log(data),\n                    error => console.log(error)\n                )\n            );\n    }\n\n    toLogin(user: User): Observable<any> {\n        return this._http.post<any>(this.login_api_url, user);\n    }\n\n    toLogout(user: User): Observable<any> {\n        return this._http.post<any>(this.logout_api_url, user);\n    }\n\n    toResetPassword(email: string): Observable<any> {\n        return this._http.post<any>(this.reset_password_url, {'email': email})\n    }\n\n    toResetPasswordConfirm(token, password: string): Observable<any> {\n        return this._http.put<any>(this.reset_password_confirm_api+'/'+token, {'password': password})\n    }\n\n    confirmEmail(token: string): Observable<any> {\n\n        return this._http.get<any>(this.confirm_url + token);\n    }\n\n    isLoggedIn() : Observable<any> {\n        return this._http.get<any>('api/get_user_data');\n    }\n}\n","module.exports = \"\"","module.exports = \"  You have confirmed registration. Proceed to <a routerLink=\\\"\\\">home page</a>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"../auth.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n\n@Component({\n    selector: 'app-confirm-email',\n    templateUrl: './confirm-email.component.html',\n    styleUrls: ['./confirm-email.component.css']\n})\nexport class ConfirmEmailComponent implements OnInit {\n    returnUrl: string = '/login';\n\n    constructor(\n        private auth: AuthService,\n        private route: ActivatedRoute,\n        private router: Router\n    ) {\n\n    }\n\n    ngOnInit() {\n\n        this.auth.confirmEmail(this.route.snapshot.params[\"token\"])\n            .subscribe(res => this.router.navigate([this.returnUrl]));\n    }\n\n}\n","module.exports = \"@media(min-width: 768px) {\\n    .field-label-responsive {\\n      padding-top: .5rem;\\n      text-align: right;\\n      \\n    }\\n\\n  }\"","module.exports = \"<div class=\\\"auth\\\">\\n    <div class=\\\"form\\\">\\n        <form [formGroup]=\\\"resetPasswordGroup\\\" (ngSubmit)=\\\"toConfirmReset()\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\"></div>\\n                <div class=\\\"col-md-6\\\">\\n                    <h2>Register New User</h2>\\n                    <hr>\\n                    <br><br>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3 field-label-responsive\\\">\\n                    <label for=\\\"password\\\"> New password</label>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"form-group has-danger\\\">\\n                        <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                            <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-key\\\"></i></div>\\n                            <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\"\\n                                   placeholder=\\\"Password\\\" required>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3 field-label-responsive\\\">\\n                    <label for=\\\"password\\\">Confirm password</label>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"form-group has-danger\\\">\\n                        <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                            <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-key\\\"></i></div>\\n                            <input type=\\\"password\\\" formControlName=\\\"password_confirm\\\" class=\\\"form-control\\\"\\n                                   id=\\\"password_confirm\\\"\\n                                   placeholder=\\\"Password\\\" required>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\"></div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\">\\n                        <ul>\\n                            <li *ngIf=\\\"password.errors.minlength || password.errors.maxlength\\\">Password must be from 8\\n                                to 40\\n                                characters long\\n                            </li>\\n                            <li *ngIf=\\\"password.errors.wrongFormat\\\">Password must contain at least one digit</li>\\n\\n                        </ul>\\n                    </div>\\n                    <div class=\\\"alert alert-danger\\\"\\n                         *ngIf=\\\"resetPasswordGroup.valid && password.value != password_confirm.value\\\">\\n                        Passwords do not match\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\"></div>\\n                <div class=\\\"col-md-6\\\">\\n                    <button class=\\\"btn btn-success\\\" type=\\\"submit\\\"\\n                            [disabled]=\\\"!resetPasswordGroup.valid && password.value != password_confirm.value\\\">Submit\\n                    </button>\\n                </div>\\n                <div class=\\\"col-md-3\\\"></div>\\n            </div>\\n\\n        </form>\\n    </div>\\n</div>\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {TextFormatDirective} from \"../directives/text-format.directive\";\nimport {AuthService} from \"../auth.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n    selector: 'app-confirm-reset',\n    templateUrl: './confirm-reset.component.html',\n    styleUrls: ['./confirm-reset.component.css']\n})\nexport class ConfirmResetComponent implements OnInit {\n    returnUrl: string;\n    resetPasswordGroup = new FormGroup({\n        password: new FormControl('', [\n            Validators.required,\n            Validators.minLength(8),\n            Validators.maxLength(40),\n            TextFormatDirective(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/),\n        ]),\n        password_confirm: new FormControl('', [\n            Validators.required,\n            Validators.minLength(8),\n            Validators.maxLength(40),\n            TextFormatDirective(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/),\n        ])\n    });\n\n    toConfirmReset() {\n        if (this.resetPasswordGroup.controls['password'].value ===\n            this.resetPasswordGroup.controls['password_confirm'].value) {\n            this.auth_.toResetPasswordConfirm(\n                this.route.snapshot.params[\"token\"],\n                this.resetPasswordGroup.controls['password'].value\n            ).subscribe(res => {\n                this.router.navigate([this.returnUrl])\n                this.resetPasswordGroup.setValue({email: '', password: ''})\n\n            })\n        }\n    }\n\n    constructor(\n        private auth_: AuthService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) {\n    }\n\n    get password() {\n        return this.resetPasswordGroup.get('password')\n    }\n\n    get password_confirm() {\n        return this.resetPasswordGroup.get('password_confirm')\n    }\n\n    ngOnInit() {\n        this.returnUrl = '/login';\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n    get_statistics_url = 'api/statistics/';\n    get_rows_url = 'api/get_rows/';\n\n    constructor(private _http: HttpClient) { }\n\n      get(): Observable<any> {\n        return this._http.get<any>('test');\n    }\n\n    getStatistics(dataset_id: number): Observable<any> {\n        return this._http.get<any>(this.get_statistics_url+dataset_id);\n    }\n\n    getRows(dataset_id, number_of_rows: number): Observable<any> {\n        return this._http.get<any>(this.get_rows_url+dataset_id+'/'+number_of_rows);\n    }\n}\n","import {AbstractControl, ValidatorFn} from \"@angular/forms\";\n\n\nexport function TextFormatDirective(nameRe: RegExp): ValidatorFn {\n    return (control: AbstractControl): {[key: string]: any} | null => {\n        const correct = nameRe.test(control.value);\n        return correct ? null : {'wrongFormat': {value: control.value}} ;\n    };\n}","module.exports = \"\"","module.exports = \"<h3>File Upload</h3>\\n<div class=\\\"custom-file\\\">\\n    <input type=\\\"file\\\" (change)=\\\"onFileSelected($event)\\\" class=\\\"custom-file\\\">\\n    <button type=\\\"button\\\" (click)=\\\"onUpload()\\\">Upload</button>\\n</div>\\n\\n\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n\n@Component({\n    selector: 'app-file-uploads',\n    templateUrl: './file-uploads.component.html',\n    styleUrls: ['./file-uploads.component.css']\n})\nexport class FileUploadsComponent implements OnInit {\n    selectedFile: File = null;\n\n    @Output() fileUploaded: EventEmitter<number> =   new EventEmitter();\n\n    constructor(\n        private http: HttpClient,\n    ) {\n    }\n\n    onFileSelected(event) {\n        this.selectedFile = <File>event.target.files[0];\n    }\n\n    onUpload() {\n        const filedata = new FormData();\n        filedata.append('upload_file', this.selectedFile, this.selectedFile.name);\n        this.http.post('api/upload', filedata)\n            .subscribe(res => {\n                console.log(res);\n                this.fileUploaded.emit(res['result'][2]);\n        });\n\n    }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \".card {\\n    border-color: dodgerblue;\\n}\\n\\n.button-group {\\n    display: flex;\\n    justify-content: space-evenly;\\n}\\n\\n.operator-button {\\n    margin-top: 20px;\\n    display: flex;\\n    justify-content: space-evenly;\\n}\\n\\n.row-padding {\\n    margin-bottom: 20px;\\n    position:relative;\\n}\\n\\n.ribbon {\\n  position:absolute;\\n  top:0;\\n  right:0;\\n}\\n\"","module.exports = \"<div class=\\\"row row-padding\\\">\\n    <div class=\\\"col-md-4\\\"></div>\\n    <div class=\\\"col-md-4\\\">\\n        <div class=\\\"card primary\\\">\\n            <div class=\\\"card-body\\\">\\n                <form class=\\\"form\\\">\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"col-7\\\">\\n                            <select class=\\\"form-control\\\" (change)=\\\"addColumn($event.target.value)\\\"\\n                                    [disabled]=\\\"disColumn\\\">\\n                                <option value=\\\"\\\" disabled selected>Chose column</option>\\n                                <option *ngFor=\\\"let row of columns\\\">\\n                                    {{ row }}\\n                                </option>\\n                            </select>\\n                        </div>\\n                        <div>\\n                            <span class=\\\"btn btn-success\\\" *ngIf=\\\"count_rows\\\">{{ count_rows }}</span>\\n                        </div>\\n                        <div class=\\\"col input-group\\\">\\n                            <input type=\\\"number\\\" name=\\\"user_quantity\\\" [ngModel]=\\\"quantity\\\"\\n                                   (ngModelChange)=\\\"setQuantity($event)\\\"\\n                                   [className]=\\\"valid_quantity ? 'form-control' : 'form-control is-invalid'\\\"\\n                                   placeholder=\\\"Max {{ maxPercentageForUser }}\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <span class=\\\"input-group-text\\\">%</span>\\n                            </div>\\n                            <div class=\\\"invalid-feedback\\\">\\n                                {{ quantityError }}\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group mx-sm-2 mb-2\\\">\\n                        <div class=\\\"button-group\\\" *ngIf=\\\"column && !operator\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addOperator('==')\\\">=</button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addOperator('!=')\\\">!=</button>\\n                            <button type=\\\"button\\\" *ngIf=\\\"valueMaxMin.max\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addOperator('<')\\\"><</button>\\n                            <button type=\\\"button\\\" *ngIf=\\\"valueMaxMin.max\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addOperator('>')\\\">></button>\\n                        </div>\\n                        <div class=\\\"button-group\\\" *ngIf=\\\"column && operator\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\">{{ operator }}</button>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group mb-2\\\">\\n                        <select class=\\\"form-control\\\" *ngIf=\\\"operator && !valueMaxMin.max\\\" (change)=\\\"addValue($event.target.value)\\\"\\n                                [disabled]=\\\"disValue\\\">\\n                            <option value=\\\"\\\" disabled selected>Chose value</option>\\n                            <option *ngFor=\\\"let row of values\\\">\\n                                {{ row }}\\n                            </option>\\n                        </select>\\n                        <input *ngIf=\\\"operator && valueMaxMin.max\\\" type=\\\"number\\\"\\n                                   name=\\\"range_value\\\"\\n                                   [ngModel]=\\\"rangeValue\\\"\\n                                   (ngModelChange)=\\\"setRangeValue($event)\\\"\\n                                   [className]=\\\"rangeValueError ? 'form-control  is-invalid' : 'form-control'\\\"\\n                                   placeholder=\\\"Min: {{ valueMaxMin.min }} Max: {{ valueMaxMin.max }}\\\">\\n                        <div class=\\\"invalid-feedback\\\">\\n                                {{ rangeValueError }}\\n                            </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n        <div class=\\\"operator-button\\\" *ngIf=\\\"(value || rangeValue) && !operatorBtwElem\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"addElem('And')\\\">Add column</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"save()\\\">Save filter</button>\\n        </div>\\n        <div class=\\\"operator-button\\\" *ngIf=\\\"value && operatorBtwElem\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\">{{ operatorBtwElem }}</button>\\n        </div>\\n    </div>\\n</div>\"","import {Component, OnInit, EventEmitter, Input, Output} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'filter-item',\n    templateUrl: './filter-item.component.html',\n    styleUrls: ['./filter-item.component.css']\n})\nexport class FilterItemComponent implements OnInit {\n    column: string;\n    operator: string;\n    value: string;\n    quantity: number;\n    count_rows: any;\n    operatorBtwElem = '';\n\n    valid_quantity = true;\n    maxPercentageForUser = 100;\n    new_column = true;\n    param_index = 0;\n    quantityError: string;\n    rangeValueError:string;\n\n    disColumn = false;\n    disValue = false;\n    disQuantity = false;\n    rangeValue: number;\n\n    valuesPushed = false;\n    valueMaxMin = {};\n\n\n    values = [];\n\n    @Output() addFilterElem: EventEmitter<any> = new EventEmitter<any>();\n    @Output() pushFilterParams: EventEmitter<object> = new EventEmitter<{ column: string, operator: string, value: string, btw_elem_operator: string }>();\n    @Output() saveFilter: EventEmitter<any> = new EventEmitter<any>();\n\n    @Input() index: number;\n    @Input() columns: string[];\n    @Input() metadata;\n    @Input() filter_parameters;\n    @Input() totalRows;\n    @Input() file_id;\n\n    constructor(private http: HttpClient) {\n    }\n\n    ngOnInit() {\n    }\n\n    save() {\n        if (!this.checkQuantity()) {\n            return false;\n        }\n        if (!this.valuesPushed) {\n            this.pushFilterParams.emit({\n                'column': this.column,\n                'operator': this.operator,\n                'value': this.value,\n                'quantity': this.calculateQuantity(),\n            });\n        }\n        this.valuesPushed = true;\n        this.saveFilter.emit();\n    }\n\n    addElem(data) {\n        if (!this.checkQuantity()) {\n            return false;\n        }\n        if(!this.checkRangeValue()){\n            return false\n        }\n        if(this.rangeValue){\n            this.value = this.rangeValue.toString();\n        }\n        this.valid_quantity = true;\n        this.operatorElems(data);\n        this.disQuantity = true;\n        this.addFilterElem.emit();\n        this.pushFilterParams.emit({\n            'column': this.column,\n            'operator': this.operator,\n            'value': this.value,\n            'quantity': this.calculateQuantity(),\n            'btw_elem_operator': this.operatorBtwElem,\n        });\n    }\n\n    addColumn(column) {\n        this.column = column;\n        this.value = '';\n        // this.rangeValue = 0;\n        this.valueMaxMin = {};\n        if ('min' in this.metadata[column] && 'max' in this.metadata[column]) {\n            this.valueMaxMin = {\n                'min': this.metadata[column]['min'],\n                'max': this.metadata[column]['max']\n            }\n        }else{\n            this.values = this.metadata[column];\n        }\n    }\n\n    setQuantity(quantity) {\n        this.quantity = quantity;\n    }\n\n    addValue(value) {\n        this.disColumn = true;\n        this.value = value;\n        let all_params = this.filter_parameters;\n        if (this.new_column) {\n            this.new_column = false;\n            this.param_index = all_params.length;\n            all_params.push({\n                'column': this.column,\n                'operator': this.operator,\n                'value': this.value,\n            });\n        } else {\n            all_params[this.param_index].value = this.value\n        }\n        this.http\n            .post('/api/count_rows', {'file_id': this.file_id, 'params': all_params})\n            .subscribe(res => this.setCountRows(res),\n                error => {\n                    console.log(error);\n                });\n    }\n\n    addOperator(oper) {\n        this.operator = oper;\n    }\n\n    operatorElems(data) {\n        this.disValue = true;\n        this.operatorBtwElem = data;\n    }\n\n    setPercentage() {\n        if (this.totalRows != 0) {\n            this.maxPercentageForUser = +(this.count_rows * 100 / this.totalRows).toFixed(2);\n        } else {\n            this.maxPercentageForUser = 100\n        }\n    }\n\n    setCountRows(data) {\n        this.count_rows = data;\n        this.setPercentage();\n    }\n\n    calculateQuantity() {\n        return Math.floor(this.totalRows * this.quantity / 100);\n    }\n\n    checkQuantity() {\n        if (!this.quantity) {\n            this.valid_quantity = false;\n            this.quantityError = 'This field is required';\n            return false;\n        } else if (this.quantity > this.maxPercentageForUser) {\n            this.quantityError = \"This value can't be greater then \" + this.maxPercentageForUser;\n            this.valid_quantity = false;\n            return false;\n        }\n        return true;\n    }\n\n    setRangeValue(data){\n        this.value = data;\n        if(this.checkRangeValue()){\n            this.rangeValueError = '';\n            this.addValue(data)\n        }\n    }\n\n    checkRangeValue(){\n        if('max' in this.valueMaxMin){\n            if(this.value > this.valueMaxMin['max'] || this.value < this.valueMaxMin['min']){\n                this.rangeValueError = \"This value should be in range between \" + this.valueMaxMin['min'] + ' and ' + this.valueMaxMin['max'];\n                return false;\n            }\n        }\n        return true;\n    }\n\n}\n","module.exports = \".center_div {\\n    margin-top: 200px;\\n}\\n\\n.card {\\n    border-color: dodgerblue;\\n}\\n\\n.button-group {\\n    display: flex;\\n    justify-content: space-evenly;\\n}\\n\\n.operator-button {\\n    margin-top: 20px;\\n    display: flex;\\n    justify-content: space-evenly;\\n}\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n    <div class=\\\"row justify-content-md-center\\\">\\n        <div class=\\\"col col-md-auto\\\">\\n            <h2 class=\\\"display-4\\\">Filtering data section</h2>\\n            <select class=\\\"form-control\\\" (change)=\\\"selectFile($event.target.value)\\\">\\n                <option value=\\\"\\\" disabled selected>Chose file</option>\\n                <option *ngFor=\\\"let file of files\\\" value=\\\"{{ file[0] }}\\\">\\n                    {{ file[2].name }}\\n                </option>\\n            </select>\\n            <hr class=\\\"my-4\\\">\\n            <input type=\\\"text\\\" placeholder=\\\"Filter name\\\"\\n                   [className]=\\\"valid_filter_name ? 'form-control' : 'form-control is-invalid'\\\"\\n                   [ngModel]=\\\"filter_name\\\"\\n                   (ngModelChange)=\\\"setFilterName($event)\\\"\\n>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\" *ngIf=\\\"columns.length > 0\\\">\\n    <div class=\\\"col-md-4\\\"></div>\\n    <div class=\\\"col-md-4\\\">\\n        <h3>Select data where:</h3>\\n    </div>\\n</div>\\n\\n<div *ngIf=\\\"columns.length > 0\\\">\\n    <filter-item *ngFor=\\\"let number of filter_number\\\"\\n                 [index]='number'\\n                 [file_id]=\\\"file_id\\\"\\n                 [columns]=\\\"columns\\\"\\n                 [metadata]=\\\"metadata\\\"\\n                 [filter_parameters]=\\\"filter_params\\\"\\n                 [totalRows]=\\\"totalRows\\\"\\n                 (addFilterElem)='addElement()'\\n                 (pushFilterParams)=\\\"pushParams($event)\\\"\\n                 (saveFilter)='storeFilter()'\\n    ></filter-item>\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {HttpClient} from '@angular/common/http';\n\n\n@Component({\n    selector: 'app-filter',\n    templateUrl: './filter.component.html',\n    styleUrls: ['./filter.component.css']\n})\nexport class FilterComponent implements OnInit {\n    filter_number: number[] = [0];\n    filter_name: string = '';\n    file_id: number;\n    files = {};\n    valid_filter_name = true;\n\n    totalRows = 0;\n\n    metadata: {};\n    columns = [];\n    value = [];\n\n    filter_params = [];\n\n    constructor(private http: HttpClient,\n                private router:Router) {\n    }\n\n    ngOnInit() {\n        this.getFiles();\n\n    }\n\n    addElement(): void {\n        this.filter_number.push(this.filter_number.length);\n    }\n\n    storeFilter() {\n        if (!this.filter_name) {\n            this.valid_filter_name = false;\n            return false;\n        }\n        this.http\n            .post('/api/save_filter', {\n                'params': this.filter_params,\n                'name': this.filter_name,\n                'file_id': this.file_id\n            })\n            .subscribe(data => this.router.navigate(['/'])\n                , error => {\n                    console.log(error);\n                });\n    }\n\n    pushParams(data) {\n        this.filter_params.push(data);\n    }\n\n    getFiles() {\n        this.http\n            .post('/api/get_files', '')\n            .subscribe(res => this.files = res,\n                error => {\n                    console.log(error);\n                });\n    }\n\n    selectFile(id) {\n        this.file_id = id;\n        this.getMetadata(this.file_id);\n    }\n\n    getMetadata(id) {\n        this.http\n            .post('/api/get_metadata', {'file_id': this.file_id})\n            .subscribe(res => this.parseMetadata(res),\n                error => {\n                    console.log(error);\n                });\n    }\n\n    parseMetadata(data) {\n        this.totalRows = data['rows'];\n        this.columns = Object.keys(data['metadata']);\n        this.metadata = data['metadata'];\n    }\n\n    setFilterName(value) {\n        this.filter_name = value;\n    }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<app-file-uploads (fileUploaded)=\\\"fileUploadHandler($event)\\\"></app-file-uploads>\\n\\n<button (click)=\\\"sendFile()\\\" >TEST: Send file to email</button>\\n\\n<app-statistics *ngIf=\\\"dataset_id\\\" [dataset_id]=\\\"dataset_id\\\"> Loading statistics... </app-statistics>\\n<app-table *ngIf=\\\"dataset_id\\\" [dataset_id]=\\\"dataset_id\\\">Loading preview table...</app-table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {DataService} from \"../data.service\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n    dataset_id : number;\n\n    constructor(private data: DataService) { }\n\n    ngOnInit() {\n    }\n\n    fileUploadHandler(dataset_id : number) {\n        console.log(dataset_id);\n        this.dataset_id = dataset_id\n    }\n\n\n    sendFile() {\n        this.data.get()\n            .subscribe(\n                res => console.log(res)\n            )\n    }\n}\n","module.exports = \"@media(min-width: 768px) {\\n    .field-label-responsive {\\n      padding-top: .5rem;\\n      text-align: right;\\n    }\\n  }\\n#error{\\n    display: none;\\n}\"","module.exports = \"<div class=\\\"auth\\\">\\n    <div class=\\\"form\\\">\\n        <form class=\\\"form-horizontal\\\" [formGroup]=\\\"loginGroup\\\" (ngSubmit)=\\\"toLogin()\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <h3>Please enter your email and password</h3>\\n                    <hr>\\n                    <br><br>\\n                    <div  class=\\\"alert alert-warning\\\" *ngIf=\\\"redirectingMessage\\\">\\n                        PLease login at first\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3 field-label-responsive\\\">\\n                    <label for=\\\"email\\\">E-Mail Address</label>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                            <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-at\\\"></i></div>\\n                            <input type=\\\"text\\\" formControlName=\\\"email\\\" required class=\\\"form-control\\\" id=\\\"email\\\"\\n                                   placeholder=\\\"you@example.com\\\" autofocus>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3 field-label-responsive\\\">\\n                    <label for=\\\"password\\\">Password</label>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"form-group has-danger\\\">\\n                        <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                            <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-key\\\"></i></div>\\n                            <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\"\\n                                   placeholder=\\\"Password\\\" required>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <strong>\\n                        <div id=\\\"error\\\" class=\\\"alert alert-warning\\\">\\n\\n\\n                        </div>\\n                    </strong>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\"\\n                         class=\\\"alert alert-danger\\\">\\n\\n                        <div *ngIf=\\\"email.errors.required\\\">\\n                            Email is required.\\n                        </div>\\n                        <div *ngIf=\\\"email.errors.wrongFormat\\\">\\n                            Wrong format of email\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\"\\n                         class=\\\"alert alert-danger\\\">\\n                        <div *ngIf=\\\"password.errors || password.errors\\\">Password must be from 8\\n                            to 40 characters long and contain at least one digit.\\n                        </div>\\n                    </div>\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"message\\\">\\n                        {{ message }}\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\"></div>\\n                <div class=\\\"col-md-6\\\"><a href=\\\"#\\\" routerLink='/reset'><span class=\\\"glyphicon glyphicon-user\\\"></span>Forgot\\n                    your   password?</a>\\n                </div>\\n                <div class=\\\"col-md-3\\\"></div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\"></div>\\n                <div class=\\\"col-md-6\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!loginGroup.valid\\\"> Login</button>\\n                </div>\\n            </div>\\n\\n        </form>\\n    </div>\\n</div>\\n  \"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {AuthService} from \"../auth.service\";\nimport {User} from \"../models/user\";\nimport {style} from \"@angular/animations\";\nimport {TextFormatDirective} from \"../directives/text-format.directive\";\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    returnUrl: string;\n    message : string;\n    redirectingMessage: boolean = this.route.snapshot.queryParams[\"authRedirecting\"] || undefined;\n\n\n    loginGroup = new FormGroup({\n        email: new FormControl('', [\n            Validators.required,\n            TextFormatDirective(/^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/)\n\n        ]),\n        password: new FormControl('', [\n            Validators.required,\n            Validators.minLength(8),\n            Validators.maxLength(40),\n            TextFormatDirective(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/),\n        ])\n    });\n\n\n    toLogin() {\n        this.auth_.toLogin(new User(this.loginGroup.controls['email'].value,\n            this.loginGroup.controls['password'].value))\n            .subscribe(\n                res => {\n                    this.router.navigate([this.returnUrl]);\n                },\n                err => {\n                    let data_txt = (JSON.stringify(err));\n                    let error_data = JSON.parse(data_txt);\n                    this.message = error_data.error.message.toString();\n                },\n            )\n    }\n\n    constructor(\n        private auth_: AuthService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) {\n    }\n\n    get password() {\n        return this.loginGroup.get('password');\n    }\n\n    get email() {\n        return this.loginGroup.get('email');\n    }\n\n\n    ngOnInit() {\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n}\n","module.exports = \"\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"../auth.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {User} from \"../models/user\";\n\n@Component({\n    selector: 'app-logout',\n    templateUrl: './logout.component.html',\n    styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n    returnUrl: string = '/login';\n    name: string;\n\n    constructor(\n        private auth_: AuthService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) {\n    }\n\n    ngOnInit() {\n        \n        this.auth_.toLogout(null).subscribe(\n            res => {\n\n                this.router.navigate([this.returnUrl]);\n            },\n        )\n           }\n           \n           \n}\n","export class User {\n    email: string;\n    password: string;\n\n    constructor(email, pass: string) {\n        this.email = email;\n        this.password = pass;\n    }\n\n\n}\n","module.exports = \"@import url(\\\"//maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\\\");\\n\\n.navbar-icon-top .navbar-nav .nav-link > .fa {\\n  position: relative;\\n  width: 36px;\\n  font-size: 24px;\\n}\\n\\n.nav-right{\\n  text-align: right;\\n}\\n\\n.navbar-icon-top .navbar-nav .nav-link > .fa > .badge {\\n  font-size: 0.75rem;\\n  position: absolute;\\n  right: 0;\\n  font-family: sans-serif;\\n}\\n\\n.navbar-icon-top .navbar-nav .nav-link > .fa {\\n  top: 3px;\\n  line-height: 12px;\\n}\\n\\n.navbar-icon-top .navbar-nav .nav-link > .fa > .badge {\\n  top: -10px;\\n}\\n\\n@media (min-width: 576px) {\\n  .navbar-icon-top.navbar-expand-sm .navbar-nav .nav-link {\\n    text-align: center;\\n    display: table-cell;\\n    height: 70px;\\n    vertical-align: middle;\\n    padding-top: 0;\\n    padding-bottom: 0;\\n  }\\n\\n  .navbar-icon-top.navbar-expand-sm .navbar-nav .nav-link > .fa {\\n    display: block;\\n    width: 48px;\\n    margin: 2px auto 4px auto;\\n    top: 0;\\n    line-height: 24px;\\n  }\\n\\n  .navbar-icon-top.navbar-expand-sm .navbar-nav .nav-link > .fa > .badge {\\n    top: -7px;\\n  }\\n}\\n\\n@media (min-width: 768px) {\\n  .navbar-icon-top.navbar-expand-md .navbar-nav .nav-link {\\n    text-align: center;\\n    display: table-cell;\\n    height: 70px;\\n    vertical-align: middle;\\n    padding-top: 0;\\n    padding-bottom: 0;\\n  }\\n\\n  .navbar-icon-top.navbar-expand-md .navbar-nav .nav-link > .fa {\\n    display: block;\\n    width: 48px;\\n    margin: 2px auto 4px auto;\\n    top: 0;\\n    line-height: 24px;\\n  }\\n\\n  .navbar-icon-top.navbar-expand-md .navbar-nav .nav-link > .fa > .badge {\\n    top: -7px;\\n  }\\n}\\n\\n@media (min-width: 992px) {\\n  .navbar-icon-top.navbar-expand-lg .navbar-nav .nav-link {\\n    text-align: center;\\n    display: table-cell;\\n    height: 70px;\\n    vertical-align: middle;\\n    padding-top: 0;\\n    padding-bottom: 0;\\n  }\\n\\n  .navbar-icon-top.navbar-expand-lg .navbar-nav .nav-link > .fa {\\n    display: block;\\n    width: 48px;\\n    margin: 2px auto 4px auto;\\n    top: 0;\\n    line-height: 24px;\\n  }\\n\\n  .navbar-icon-top.navbar-expand-lg .navbar-nav .nav-link > .fa > .badge {\\n    top: -7px;\\n  }\\n}\\n\\n@media (min-width: 1200px) {\\n  .navbar-icon-top.navbar-expand-xl .navbar-nav .nav-link {\\n    text-align: center;\\n    display: table-cell;\\n    height: 70px;\\n    vertical-align: middle;\\n    padding-top: 0;\\n    padding-bottom: 0;\\n  }\\n\\n  .navbar-icon-top.navbar-expand-xl .navbar-nav .nav-link > .fa {\\n    display: block;\\n    width: 48px;\\n    margin: 2px auto 4px auto;\\n    top: 0;\\n    line-height: 24px;\\n  }\\n\\n  .navbar-icon-top.navbar-expand-xl .navbar-nav .nav-link > .fa > .badge {\\n    top: -7px;\\n  }\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-icon-top navbar-expand-lg navbar-dark bg-dark\\\">\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">CarStatistic</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\n            aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item active\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">\\n                    <i class=\\\"fa fa-home\\\"></i>\\n                    Home\\n                </a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" href=\\\"#\\\">\\n                    Messages\\n                </a>\\n            </li>\\n             <li class=\\\"nav-item active\\\">\\n                <a class=\\\"nav-link\\\" href=\\\"/filter\\\">\\n                    Filter\\n                </a>\\n            </li>\\n            <li class=\\\"nav-item active nav-right\\\" *ngIf=\\\"!isLogined()\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">\\n                    Login\\n                </a>\\n            </li>\\n            <li class=\\\"nav-item active nav-right\\\" *ngIf=\\\"!isLogined()\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">\\n                    Sign up\\n                </a>\\n            </li>\\n            <li class=\\\"nav-item active nav-right\\\" *ngIf=\\\"isLogined()\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/logout\\\">\\n                    Logout\\n                </a>\\n            </li>\\n\\n        </ul>\\n\\n    </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n  \n  isLogined(){\n    function getCookie(name) {\n        var matches = document.cookie.match(new RegExp(\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n        return matches ? decodeURIComponent(matches[1]) : undefined;\n\n    }\n    let isLog = getCookie(\"session\");\n    return isLog;\n  }\n\n}\n","module.exports = \"\\nbody{\\n\\tfont-family: 'Courgette', cursive;\\n}\\nbody{\\n\\tbackground:#f3f3e1;\\n}\\n.wrap{\\n\\tmargin:0 auto;\\n\\twidth:1000px;\\n}\\n.logo{\\n\\tmargin-top:50px;\\n}\\n.logo h1{\\n\\tfont-size:200px;\\n\\tcolor:#8F8E8C;\\n\\ttext-align:center;\\n\\tmargin-bottom:1px;\\n\\ttext-shadow:1px 1px 6px #fff;\\n}\\n.logo p{\\n\\tcolor:rgb(228, 146, 162);\\n\\tfont-size:20px;\\n\\tmargin-top:1px;\\n\\ttext-align:center;\\n}\\n.logo p span{\\n\\tcolor:lightgreen;\\n}\\n.sub a{\\n\\tcolor:white;\\n\\tbackground:#8F8E8C;\\n\\ttext-decoration:none;\\n\\tpadding:7px 120px;\\n\\tfont-size:13px;\\n\\tfont-family: arial, serif;\\n\\tfont-weight:bold;\\n\\t-webkit-border-radius:3em;\\n\\t-moz-border-radius:.1em;\\n\\t-border-radius:.1em;\\n}\\n.footer{\\n\\tcolor:#8F8E8C;\\n\\tposition:absolute;\\n\\tright:10px;\\n\\tbottom:10px;\\n}\\n.footer a{\\n\\tcolor:rgb(228, 146, 162);\\n}\\t\\n\"","module.exports = \"<div class=\\\"logo\\\">\\n\\n    <h1>404 not found</h1>\\n    <p>Error occurred! - File not Found</p>\\n\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n.notification {\\n    position: absolute;\\n      top: 12%;\\n      left: 83%;\\n    width: 15%;\\n    min-width: 100px;\\n    min-height: 30px;\\n    z-index: 10;\\n}\\n\\n.notification-box {\\n    padding: 20px;\\n    background-color: #4d9ef4;\\n    color: white;\\n    opacity: 1;\\n    transition: opacity 0.6s;\\n    margin-bottom: 15px;\\n    width: 100%;\\n    height: 10%;\\n    border-radius: 5%;\\n}\\n\\n.closebtn {\\n    top: 100%;\\n    right: 100%;\\n    color: white;\\n    font-weight: bold;\\n    float: right;\\n    font-size: 22px;\\n    line-height: 20px;\\n    cursor: pointer;\\n    transition: 0.3s;\\n}\\n\\n.closebtn:hover {\\n    color: black;\\n}\"","module.exports = \"\\n<div class=\\\"notification\\\">\\n  <div class=\\\"notification-box\\\" *ngFor=\\\"let msg of messages; let i = index\\\">\\n    <span class=\\\"closebtn\\\" (click)=\\\"removeNotification($event.target, i)\\\">&times;</span>\\n      {{msg.data}}\\n  </div>\\n</div>\"","import {Component, Input, OnInit} from '@angular/core';\nimport {SocketService} from \"../socket.service\";\nimport {DataService} from \"../data.service\";\nimport {AuthGuardService} from \"../auth.guard\";\nimport {stringify} from \"querystring\";\nimport {AuthService} from \"../auth.service\";\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.css']\n})\nexport class NotificationComponent implements OnInit {\n\n  constructor(private socket: SocketService,\n              private auth: AuthService,\n              private auth_guard: AuthGuardService) {\n    }\n\n    messages = [];\n    connection;\n\n    ngOnInit() {\n        if(this.auth_guard.isLogined()) {\n            this.connection = this.socket.getMessages()\n                .subscribe(\n                    data => {\n                        this.messages.push(data);\n                    }\n                );\n            this.auth.isLoggedIn()\n                .subscribe(\n                    res => {\n                        this.socket.joinRoom(res['user_id']);\n                        console.log('asf')\n                    }\n                );\n        }\n    }\n\n    removeNotification(element : Node, index: number) {\n        element.parentElement.remove();\n        this.messages.splice(index, 1);\n    }\n\n\n}\n","module.exports = \"@media(min-width: 768px) {\\n  .field-label-responsive {\\n    padding-top: .5rem;\\n    text-align: right;\\n  }\\n}\\n#error{\\n    display: none;\\n}\"","module.exports = \"<div class=\\\"auth\\\">\\n    <div class=\\\"form\\\">\\n        <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div *ngIf=\\\"message\\\" class=\\\"alert alert-success\\\">\\n                        <br><br>{{ message }}\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n            </div>\\n        <form class=\\\"form-horizontal\\\"  [formGroup]=\\\"registerGroup\\\" (ngSubmit)=\\\"toRegister()\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\"></div>\\n                <div class=\\\"col-md-6\\\">\\n                    <h2>Register New User</h2>\\n                    <hr>\\n                    <br><br>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3 field-label-responsive\\\">\\n                    <label for=\\\"email\\\">E-Mail Address</label>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                            <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-at\\\"></i></div>\\n                            <input type=\\\"text\\\" formControlName=\\\"email\\\" required class=\\\"form-control\\\" id=\\\"email\\\"\\n                                   placeholder=\\\"you@example.com\\\" autofocus>\\n\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div *ngIf=\\\"email == ''\\\">\\n                        Email can not be empty\\n                    </div>\\n                    <div *ngIf=\\\"email.invalid && (email.dirty || email.touched) && validation_passed\\\"\\n                         class=\\\"alert alert-danger\\\">\\n\\n                        <div *ngIf=\\\"email.errors.required\\\">\\n                            Email is required.\\n                        </div>\\n                        <div *ngIf=\\\"email.errors.wrongFormat\\\">\\n                            Wrong format of email.\\n                        </div>\\n\\n\\n\\n                    </div>\\n                    <div class=\\\" alert alert-danger\\\" *ngIf=\\\"isEmailBusy == true\\\">\\n                            {{ error_message }}\\n                        </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3 field-label-responsive\\\">\\n                    <label for=\\\"password\\\">Password</label>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"form-group has-danger\\\">\\n                        <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                            <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-key\\\"></i></div>\\n                            <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\"\\n                                   placeholder=\\\"Password\\\" required>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                     <div class=\\\"alert alert-danger\\\" *ngIf=\\\"password.invalid && (password.dirty || password.touched) && validation_passed\\\">\\n                        <ul>\\n                            <li *ngIf=\\\"password.errors || password.errors\\\">Password must be from 8\\n                                to 40 characters long and contain at least one digit.\\n                            </li>\\n                        </ul>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\"></div>\\n                <div class=\\\"col-md-6\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!registerGroup.valid\\\"> Register</button>\\n                </div>\\n            </div>\\n\\n        </form>\\n    </div>\\n</div>\\n\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {TextFormatDirective} from \"../directives/text-format.directive\";\nimport {AuthService} from \"../auth.service\";\n\nimport {User} from \"../models/user\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n    selector: 'app-registration',\n    templateUrl: './registration.component.html',\n    styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n    returnUrl: string;\n    isEmailBusy: boolean = false;\n    error_message: string;\n    message: boolean;\n    validation_passed: boolean = true;\n\n    registerGroup = new FormGroup({\n        email: new FormControl('', [\n            Validators.required,\n            TextFormatDirective(/^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/)\n\n        ]),\n        password: new FormControl('', [\n            Validators.required,\n            Validators.minLength(8),\n            Validators.maxLength(40),\n            TextFormatDirective(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/),\n        ])\n    });\n\n    toRegister() {\n        this.auth_.toRegister(new User(this.registerGroup.controls['email'].value,\n            this.registerGroup.controls['password'].value))\n            .subscribe(\n                res => {\n                    localStorage.setItem('token', res.token);\n                    let data_txt = (JSON.stringify(res));\n                    let response_data = JSON.parse(data_txt);\n                    this.message = response_data.message;\n                    this.registerGroup.setValue({email: '', password: ''});\n                    this.validation_passed = false;\n\n\n                },\n                err => {\n                    this.isEmailBusy = true;\n                    let data_txt = (JSON.stringify(err));\n                    let error_data = JSON.parse(data_txt);\n                    this.error_message = error_data.error.message.toString();\n                })\n    }\n\n\n    get password() {\n        return this.registerGroup.get('password')\n    }\n\n    get email() {\n        return this.registerGroup.get('email')\n    }\n\n\n    constructor(\n        private auth_: AuthService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) {\n    }\n\n    ngOnInit() {\n\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n}\n","module.exports = \"@media(min-width: 768px) {\\n  .field-label-responsive {\\n    padding-top: .5rem;\\n    text-align: right;\\n  }\\n}\\n#error{\\n    display: none;\\n}\\n#input_form{\\n    display: none;\\n}\"","module.exports = \"<div class=\\\"auth\\\">\\n    <div class=\\\"form\\\">\\n        <form id=\\\"reset-password\\\" [formGroup]=\\\"resetPasswordGroup\\\" (ngSubmit)=\\\"toResetPassword()\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <h3>Enter your registration email.</h3>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3 field-label-responsive\\\">\\n                    <label for=\\\"email\\\">E-Mail Address</label>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                            <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-at\\\"></i></div>\\n                            <input type=\\\"text\\\" formControlName=\\\"email\\\" required class=\\\"form-control\\\"\\n                                   placeholder=\\\"you@example.com\\\" autofocus>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!resetPasswordGroup.valid\\\"> Send</button>\\n                </div>\\n\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div *ngIf=\\\"email == ''\\\">\\n                        Email can not be empty\\n                    </div>\\n                    <div *ngIf=\\\"email.invalid && (email.dirty || email.touched) && validation_passed\\\"\\n                         class=\\\"alert alert-danger\\\">\\n                        <div *ngIf=\\\"email.errors.required\\\">\\n                            Email is required.\\n                        </div>\\n                        <div *ngIf=\\\"email.errors.wrongFormat\\\">\\n                            Wrong format of email.\\n                        </div>\\n                    </div>\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error_message\\\">\\n                        {{ error_message }}\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div *ngIf=\\\"confirm_message\\\">\\n                        <div class=\\\"alert alert-success row \\\">\\n                            We send you confirnation token. Please check your email.\\n                        </div>\\n                    </div>\\n\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"../auth.service\";\n\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {TextFormatDirective} from \"../directives/text-format.directive\";\n\n\n@Component({\n    selector: 'app-reset-password',\n    templateUrl: './reset-password.component.html',\n    styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n    confirm_message: boolean;\n    error_message: string;\n    validation_passed : boolean = true;\n    resetPasswordGroup = new FormGroup({\n        email: new FormControl('', [\n            Validators.required,\n            TextFormatDirective(/^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/)\n\n        ])\n    });\n\n    toResetPassword() {\n        this.auth_.toResetPassword(this.resetPasswordGroup.controls['email'].value)\n            .subscribe(\n                res => {\n                    this.confirm_message = true;\n                    this.resetPasswordGroup.setValue({email: ''});\n                    this.error_message =undefined;\n                    this.validation_passed = false;\n\n                }, err => {\n                    let data_txt = (JSON.stringify(err));\n                    let error_data = JSON.parse(data_txt);\n                    this.error_message = err.error.message.toString();\n\n\n                },\n            )\n    }\n\n    get email() {\n        return this.resetPasswordGroup.get('email')\n    }\n\n    constructor(\n        private auth_: AuthService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) {\n    }\n\n    ngOnInit() {\n\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport * as io from 'socket.io-client';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SocketService {\n  private url = window.location.origin;\n  private socketio;\n\n  joinRoom(user_id : string) {\n    this.socketio.emit('join_room', user_id);\n  }\n\n  getMessages() {\n    return new Observable(observer => {\n      this.socketio = io(this.url, {query:1});\n      this.socketio.on('notification', (data) => {\n        observer.next(data);\n      });\n      return () => {\n        this.socketio.disconnect();\n      };\n    });\n  }\n}","module.exports = \".tab {\\n    overflow: hidden;\\n    border: 1px solid #ccc;\\n    border-bottom: none;\\n    background-color: #f1f1f1;\\n    width: 600px;\\n}\\n\\n/* Style the buttons that are used to open the tab content */\\n\\n.tab button {\\n    background-color: inherit;\\n    float: left;\\n    border: none;\\n    outline: none;\\n    cursor: pointer;\\n    padding: 14px 16px;\\n    transition: 0.3s;\\n    width: 50%;\\n}\\n\\n/* Change background color of buttons on hover */\\n\\n.tab button:hover {\\n    background-color: #ddd;\\n}\\n\\n/* Create an active/current tablink class */\\n\\n.tab button.active {\\n    background-color: #ccc;\\n}\"","module.exports = \"\\n<div>\\n    <div class=\\\"plot\\\">\\n        <div class=\\\"tab\\\">\\n          <button #pie class=\\\"tablinks\\\" (click)=\\\"setPlot('pie', pie, bar) \\\">Pie</button>\\n          <button #bar class=\\\"tablinks\\\" (click)=\\\"setPlot('bar', bar, pie)\\\">Bar</button>\\n        </div>\\n        <label for=\\\"column_selection\\\">Select Column: </label>\\n        <select id=\\\"column_selection\\\" #selection (change)=\\\"makeSelection(selection.value)\\\" class=\\\"selectpicker\\\">\\n            <option *ngFor=\\\"let column of columns\\\"> {{column}}</option>\\n        </select>\\n        <plotly-plot *ngIf=\\\"this.plot=='pie'\\\"\\n                     [config]=\\\"graph['config']\\\" [data]=\\\"graph['pie']\\\" [layout]=\\\"graph['layout']\\\"></plotly-plot>\\n        <plotly-plot *ngIf=\\\"this.plot=='bar'\\\"\\n            [config]=\\\"graph['config']\\\" [data]=\\\"graph['bar']\\\" [layout]=\\\"graph['layout']\\\"></plotly-plot>\\n    </div>\\n\\n</div>\"","import {Component, ElementRef, Input, OnInit} from '@angular/core';\nimport {DataService} from \"../data.service\";\nimport {update} from \"plotly.js\";\n\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.css']\n})\nexport class StatisticsComponent implements OnInit {\n\n    dataset_id_ : number;\n    columns : Array<string>;\n    statistics : Object;\n\n    plot : string = 'bar';\n\n    public graph = {\n        pie: [\n            { labels: [], values: [], type: 'pie' },\n        ],\n        bar: [\n            {x:[], y:[], type: 'bar' },\n        ],\n        layout: {\n            width: 600, height: 400, title: 'Column1',\n            xaxis: {title: \"\", tickangle: \"-90\", tickformat: '.3f', showline: true, type: \"category\"},\n            modeBarButtonsToRemove: ['sendDataToCloud', 'hoverCompareCartesian']\n        },\n        config: {\n            displayModeBar: true,\n            displaylogo: false,\n            modeBarButtonsToRemove: ['sendDataToCloud', 'pan2d', 'lasso2d', 'autoScale2d', 'zoom2d', 'select2d',\n                'resetScale2d', 'toggleSpikelines', 'toggleHover', 'hoverClosestCartesian', 'hoverCompareCartesian'],\n        }\n    };\n\n    get dataset_id() : number {\n        return this.dataset_id_;\n    }\n\n    @Input() set dataset_id(name: number) {\n        this.dataset_id_ = name;\n        this.updateGraph();\n    }\n\n    constructor(private data : DataService) { }\n\n    updateGraph() {\n        this.data.getStatistics(this.dataset_id)\n            .subscribe(\n                res => {\n                    this.statistics = res;\n                    this.columns = Object.keys(res);\n                    this.graph.layout.title = this.columns[0];\n                    this.graph.pie[0].labels = Object.keys(res[this.columns[0]]);\n                    this.graph.pie[0].values = Object.values(res[this.columns[0]]);\n                    this.graph.bar[0].x = Object.keys(res[this.columns[0]]);\n                    this.graph.bar[0].y = Object.values(res[this.columns[0]]);\n                },\n                error => {console.log(error)}\n            );\n    }\n\n    ngOnInit() {\n        this.updateGraph();\n    }\n\n    setPlot(plot_type : string, target, opp: Element) {\n        this.plot = plot_type;\n        target.className += ' active';\n        opp.className = opp.className.replace(' active', '');\n    }\n\n    makeSelection(value : string) {\n        this.graph.layout.title = value;\n\n        this.graph.pie[0].labels = Object.keys(this.statistics[value]);\n        this.graph.pie[0].values = Object.values(this.statistics[value]);\n\n        this.graph.bar[0].x = Object.keys(this.statistics[value]);\n        this.graph.bar[0].y = Object.values(this.statistics[value]);\n    }\n}\n","module.exports = \"@import url(\\\"//maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\\\");\"","module.exports = \"<table class=\\\"table table-bordered table-hover\\\">\\n    <thead>\\n        <tr>\\n            <th *ngFor=\\\"let col_name of columns\\\">{{col_name}}</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let row of rows\\\">\\n          <td *ngFor=\\\"let val of row\\\">{{val}} </td>\\n        </tr>\\n    </tbody>\\n</table>\"","import {Component, Input, OnInit} from '@angular/core';\nimport {DataService} from \"../data.service\";\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements OnInit {\n\n    dataset_id_: number;\n    columns : Array<string>;\n    rows : Array<Array<string>>;\n\n    @Input() set dataset_id(dataset_id : number) {\n        this.dataset_id_ = dataset_id;\n        this.updateTable();\n    }\n\n    get dataset_id () : number {\n        return this.dataset_id_;\n    }\n\n    updateTable() {\n        this.data.getRows(this.dataset_id, 10)\n            .subscribe(\n              res => {this.columns = res['columns']; this.rows = res['rows']},\n              error => {console.log(error)}\n            );\n    }\n\n    constructor(private data : DataService) { }\n\n    ngOnInit() {\n        this.updateTable();\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));","/* (ignored) */"],"sourceRoot":""}